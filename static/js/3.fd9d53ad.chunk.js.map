{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","text","likesCount","MyPosts","React","memo","maxLength10","maxLengthCreator","posts","postsData","reverse","map","p","key","id","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","cols","rows","placeholder","validate","required","btn","type","postBlock","formData","addPost","post","MyPostsContainer","connect","state","profile","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","styles","profileString","createField","Input","Contact","contactTitle","contactValue","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","ProfileInfo","savePhoto","saveProfile","Preloader","infoBlock","mainPhoto","photos","large","userPhoto","fileInput","target","files","length","initialValues","console","log","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","setUserProfile","savePhotoSucsess","withRouter"],"mappings":"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","file":"static/js/3.fd9d53ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descripionBlock\":\"ProfileInfo_descripionBlock__FYcCZ\",\"infoBlock\":\"ProfileInfo_infoBlock__QIB8s\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3wpA-\",\"fileInput\":\"ProfileInfo_fileInput__2VPD6\",\"contact\":\"ProfileInfo_contact__hSd5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3qrq5\",\"btn\":\"MyPosts_btn__4NTRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3goru\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src=\"https://www.1zoom.ru/big2/30/147941-aleni.jpg\" alt=\"\"/>\r\n\t\t\t{props.text}\r\n\t\t\t<div className=\"\">\r\n\t\t\t\t<span>Like {props.likesCount}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n\tconst maxLength10 = maxLengthCreator(10);\r\n\r\n\tconst posts = [...props.postsData].reverse().map(p => <Post text={p.text} key={p.id} likesCount={p.likesCount} />);\r\n\r\n\tconst PostForm = (props) => {\r\n\t\treturn(\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<Field component={Textarea} name={\"post\"} cols=\"30\" rows=\"5\" placeholder=\"Add post\" validate={[required, maxLength10]} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.btn}>\r\n\t\t\t\t\t<button type=\"submit\">Add post</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n\tconst PostReduxForm = reduxForm ({\r\n\t\tform: 'post'\r\n\t})(PostForm);\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.addPost(formData.post);\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.postBlock}>\r\n\t\t\t<div className=\"\">\r\n\t\t\t\t<h3>My posts</h3>\r\n\t\t\t\t<div className=\"\">New post</div>\r\n\t\t\t\t<PostReduxForm onSubmit={onSubmit} />\r\n\t\t\t</div>\r\n\t\t\t{posts}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\n// class MyPosts extends React.PureComponent {\r\n\r\n// \t// shouldComponentUpdate(nextProps, nextState) {\r\n// \t// \treturn nextProps !== this.props || nextState !== this.state;\r\n// \t// }\r\n\r\n// \trender() {\r\n\r\n// \t\tconsole.log('MyPosts');\r\n\t\r\n// \t\tconst maxLength10 = maxLengthCreator(10);\r\n\r\n// \t\tconst posts = this.props.postsData.map(p => <Post text={p.text} key={p.id} likesCount={p.likesCount} />);\r\n\r\n// \t\tconst PostForm = (props) => {\r\n// \t\t\treturn(\r\n// \t\t\t\t<form onSubmit={props.handleSubmit}>\r\n// \t\t\t\t\t<div className=\"\">\r\n// \t\t\t\t\t\t<Field component={Textarea} name={\"post\"} cols=\"30\" rows=\"5\" placeholder=\"Add post\" validate={[required, maxLength10]} />\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t\t<div className={classes.btn}>\r\n// \t\t\t\t\t\t<button type=\"submit\">Add post</button>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</form>\r\n// \t\t\t);\r\n// \t\t}\r\n// \t\tconst PostReduxForm = reduxForm ({\r\n// \t\t\tform: 'post'\r\n// \t\t})(PostForm);\r\n\r\n// \t\tconst onSubmit = (formData) => {\r\n// \t\t\tthis.props.addPost(formData.post);\r\n\r\n// \t\t}\r\n\r\n// \t\treturn (\r\n// \t\t\t<div className={classes.postBlock}>\r\n// \t\t\t\t<div className=\"\">\r\n// \t\t\t\t\t<h3>My posts</h3>\r\n// \t\t\t\t\t<div className=\"\">New post</div>\r\n// \t\t\t\t\t<PostReduxForm onSubmit={onSubmit} />\r\n// \t\t\t\t</div>\r\n// \t\t\t\t{posts}\r\n// \t\t\t</div>\r\n// \t\t);\r\n\r\n// \t}\r\n// }\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tpostsData: state.profile.postsData,\r\n\t\tnewPostText: state.profile.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (text) => {\r\n\t\t\tdispatch(addPostActionCreator(text));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div onDoubleClick={activateEditMode}>\r\n\t\t\t\t\t<b>Status: </b>\r\n\t\t\t\t\t<span>{props.status || \"-------\"}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>Status: </b>\r\n\t\t\t\t\t<input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} type=\"text\" value={status} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport styles from './ProfileInfo.module.css';\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\nimport {reduxForm} from 'redux-form';\n\nconst ProfileDataForm = ({handleSubmit, profile}) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<button>save</button>\n\t\t\t</div>\n\t\t\t<div className={styles.profileString}>\n\t\t\t\t<b>Full name:</b> {createField('Full name', 'fullName', Input, [])}\n\t\t\t</div>\n\t\t\t<div className={styles.profileString}>\n\t\t\t\t<b>Looking for a job:</b> {createField('', 'lookingForAJob', Input, [], {type: 'checkbox'})}\n\t\t\t</div>\n\t\t\t<div className={styles.profileString}>\n\t\t\t\t<b>My professionals skils:</b> {createField('My professonal skills', 'lookingForAJobDescription', Textarea, [])}\n\t\t\t</div>\n\t\t\t<div className={styles.profileString}>\n\t\t\t\t<b>About me:</b> {createField('About me', 'aboutMe', Textarea, [])}\n\t\t\t</div>\n\t\t\t{/*<div>\n\t\t\t\t<b>Contacns:</b> {Object.keys(profile.contacts).map(key => {\n\t\t\t\t\treturn <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n\t\t\t\t})}\n\t\t\t</div>*/}\n\t\t</form>\n\t)\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React, {useState}  from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from './../../../assets/images/i.webp';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile, ...props}) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tconsole.log(formData);\r\n\t\tsaveProfile(formData);\r\n\t\tsetEditMode(false);\r\n\t}\r\n\r\n\t// console.log(profile);\r\n\r\n\treturn (\r\n\t\t<div className={styles.infoBlock}>\r\n\t\t\t{/*<div>\r\n\t\t\t\t<img src=\"https://wallup.net/wp-content/uploads/2019/09/682919-woodenpath.jpg\" width=\"600\" alt=\"\"/>\r\n\t\t\t</div>*/}\r\n\t\t\t<img className={styles.mainPhoto} src={profile.photos.large || userPhoto} alt=\"\" />\r\n\t\t\t{isOwner && <input className={styles.fileInput} type=\"file\" onChange={onMainPhotoSelected} />}\r\n\r\n\t\t\t{editMode ?\r\n\t\t\t\t<ProfileDataForm initialValues={profile} onSubmit={onSubmit} profile={profile} />\r\n\t\t\t\t: <ProfileData goToEditMode={() => {setEditMode(true)}} isOwner={isOwner} profile={profile} />\r\n\t\t\t}\r\n\t\t\t{/*<a className={styles.descripionBlock} href={'http://' + props.profile.contacts.facebook}>Facebook</a>\r\n\t\t\t<a className={styles.descripionBlock} href={'http://' + props.profile.contacts.vk}>VK</a>\r\n\t\t\t<a className={styles.descripionBlock} href={'http://' + props.profile.contacts.twitter}>Twitter</a>*/}\r\n\t\t\t{/*<div className={styles.descripionBlock}>ava + descripion</div>*/}\r\n\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\treturn (\r\n\t\t<div className={styles.contact}>\r\n\t\t\t<b>{contactTitle}:</b> {contactValue}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isOwner &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={goToEditMode}>edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<div className={styles.profileString}>\r\n\t\t\t\t<b>Full name:</b> {profile.fullName}\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.profileString}>\r\n\t\t\t\t<b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n\t\t\t</div>\r\n\t\t\t{profile.lookingForAJob && \r\n\t\t\t\t<div className={styles.profileString}>\r\n\t\t\t\t\t<b>My professionals skils:</b> {profile.lookingForAJobDescription}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<div className={styles.profileString}>\r\n\t\t\t\t<b>About me:</b> {profile.aboutMe}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacns:</b> {Object.keys(profile.contacts).map(key => {\r\n\t\t\t\t\treturn <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo \r\n\t\t\t\tsavePhoto={props.savePhoto} \r\n\t\t\t\tisOwner={props.isOwner} \r\n\t\t\t\tprofile={props.profile} \r\n\t\t\t\tstatus={props.status} \r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\tsaveProfile={props.saveProfile} \r\n\t\t\t/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, savePhotoSucsess, saveProfile} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getProfile(userId);\r\n\t\t\tthis.props.getStatus(userId);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile \r\n\t\t\t\t{...this.props} \r\n\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\tprofile={this.props.profile} \r\n\t\t\t\tstatus={this.props.status} \r\n\t\t\t\tupdateStatus={this.props.updateStatus} \r\n\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile.profile,\r\n\tstatus: state.profile.status,\r\n\tauthorizedUserId: state.auth.id,\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, savePhotoSucsess, saveProfile}),\r\n\twithRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}