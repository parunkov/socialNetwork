{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","text","likesCount","MyPosts","React","memo","maxLength10","maxLengthCreator","posts","postsData","reverse","map","p","key","id","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","cols","rows","placeholder","validate","required","btn","type","postBlock","formData","addPost","post","MyPostsContainer","connect","state","profile","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","photos","large","styles","descripionBlock","fullName","aboutMe","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","Component","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.01a9bf7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3qrq5\",\"btn\":\"MyPosts_btn__4NTRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3goru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descripionBlock\":\"ProfileInfo_descripionBlock__FYcCZ\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src=\"https://www.1zoom.ru/big2/30/147941-aleni.jpg\" alt=\"\"/>\r\n\t\t\t{props.text}\r\n\t\t\t<div className=\"\">\r\n\t\t\t\t<span>Like {props.likesCount}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n\tconst maxLength10 = maxLengthCreator(10);\r\n\r\n\tconst posts = [...props.postsData].reverse().map(p => <Post text={p.text} key={p.id} likesCount={p.likesCount} />);\r\n\r\n\tconst PostForm = (props) => {\r\n\t\treturn(\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<Field component={Textarea} name={\"post\"} cols=\"30\" rows=\"5\" placeholder=\"Add post\" validate={[required, maxLength10]} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.btn}>\r\n\t\t\t\t\t<button type=\"submit\">Add post</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n\tconst PostReduxForm = reduxForm ({\r\n\t\tform: 'post'\r\n\t})(PostForm);\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.addPost(formData.post);\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.postBlock}>\r\n\t\t\t<div className=\"\">\r\n\t\t\t\t<h3>My posts</h3>\r\n\t\t\t\t<div className=\"\">New post</div>\r\n\t\t\t\t<PostReduxForm onSubmit={onSubmit} />\r\n\t\t\t</div>\r\n\t\t\t{posts}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\n// class MyPosts extends React.PureComponent {\r\n\r\n// \t// shouldComponentUpdate(nextProps, nextState) {\r\n// \t// \treturn nextProps !== this.props || nextState !== this.state;\r\n// \t// }\r\n\r\n// \trender() {\r\n\r\n// \t\tconsole.log('MyPosts');\r\n\t\r\n// \t\tconst maxLength10 = maxLengthCreator(10);\r\n\r\n// \t\tconst posts = this.props.postsData.map(p => <Post text={p.text} key={p.id} likesCount={p.likesCount} />);\r\n\r\n// \t\tconst PostForm = (props) => {\r\n// \t\t\treturn(\r\n// \t\t\t\t<form onSubmit={props.handleSubmit}>\r\n// \t\t\t\t\t<div className=\"\">\r\n// \t\t\t\t\t\t<Field component={Textarea} name={\"post\"} cols=\"30\" rows=\"5\" placeholder=\"Add post\" validate={[required, maxLength10]} />\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t\t<div className={classes.btn}>\r\n// \t\t\t\t\t\t<button type=\"submit\">Add post</button>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</form>\r\n// \t\t\t);\r\n// \t\t}\r\n// \t\tconst PostReduxForm = reduxForm ({\r\n// \t\t\tform: 'post'\r\n// \t\t})(PostForm);\r\n\r\n// \t\tconst onSubmit = (formData) => {\r\n// \t\t\tthis.props.addPost(formData.post);\r\n\r\n// \t\t}\r\n\r\n// \t\treturn (\r\n// \t\t\t<div className={classes.postBlock}>\r\n// \t\t\t\t<div className=\"\">\r\n// \t\t\t\t\t<h3>My posts</h3>\r\n// \t\t\t\t\t<div className=\"\">New post</div>\r\n// \t\t\t\t\t<PostReduxForm onSubmit={onSubmit} />\r\n// \t\t\t\t</div>\r\n// \t\t\t\t{posts}\r\n// \t\t\t</div>\r\n// \t\t);\r\n\r\n// \t}\r\n// }\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tpostsData: state.profile.postsData,\r\n\t\tnewPostText: state.profile.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (text) => {\r\n\t\t\tdispatch(addPostActionCreator(text));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div onDoubleClick={activateEditMode}>\r\n\t\t\t\t\t<span>{props.status || \"-------\"}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} type=\"text\" value={status} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, ...props}) => {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\t{/*<div>\r\n\t\t\t\t<img src=\"https://wallup.net/wp-content/uploads/2019/09/682919-woodenpath.jpg\" width=\"600\" alt=\"\"/>\r\n\t\t\t</div>*/}\r\n\t\t\t<img src={profile.photos.large} alt=\"\" />\r\n\t\t\t<div className={styles.descripionBlock}>{profile.fullName}</div>\r\n\t\t\t{/*<a className={styles.descripionBlock} href={'http://' + props.profile.contacts.facebook}>Facebook</a>\r\n\t\t\t<a className={styles.descripionBlock} href={'http://' + props.profile.contacts.vk}>VK</a>\r\n\t\t\t<a className={styles.descripionBlock} href={'http://' + props.profile.contacts.twitter}>Twitter</a>*/}\r\n\t\t\t<div className={styles.descripionBlock}>{profile.aboutMe}</div>\r\n\t\t\t{/*<div className={styles.descripionBlock}>ava + descripion</div>*/}\r\n\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {setUserProfile, getProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getProfile(userId);\r\n\t\t\tthis.props.getStatus(userId);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile \r\n\t\t\t\t{...this.props} \r\n\t\t\t\tprofile={this.props.profile} \r\n\t\t\t\tstatus={this.props.status} \r\n\t\t\t\tupdateStatus={this.props.updateStatus} \r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile.profile,\r\n\tstatus: state.profile.status,\r\n\tauthorizedUserId: state.auth.id,\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus}),\r\n\twithRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}